# 13/04/2018
      backend: Implement functionality for add/remove owners and get owned/subscribed/selected drops in backend & Convert drop_metadata objects to frontend dictionaries (#57)

# 06/04/2018
      backend: Create listener for frontend communications, Ensure connections between both ends are working (#43)
      frontend: Implement sockets for various op sys, create constants file, prepare frontend functions for legitimate backend responses (#14)

# 30/03/2018
      frontend: Create initial socket communication implementation on frontend side, modify existing frontend data structures to match backend system (#11)

# 23/03/2018
      frontend: Create owner template with ability to add, view, and remove owners. Implement preliminary backend communication functions for this view. Create ability to choose files to add to drops using file picker. (#9)

# 09/03/2018
      frontend: Update methods for Flask communication (html forms), Implement frontend logic for multiple frontend actions to prepare for socket communication with backend, Plan structure of frontend communication (#8)

# 02/03/2018
      frontend: Implement section for viewing files in a drop, Implement actions for each file that communicate with POST requests (open in OS file viewer/delete file) (#2)

# 23/02/2018
      frontend: Create initial show_drops UI Flask templates

